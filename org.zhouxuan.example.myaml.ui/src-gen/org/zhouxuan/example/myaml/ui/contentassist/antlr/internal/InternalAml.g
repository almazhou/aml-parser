/*
* generated by Xtext
*/
grammar InternalAml;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.zhouxuan.example.myaml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.zhouxuan.example.myaml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.zhouxuan.example.myaml.services.AmlGrammarAccess;

}

@parser::members {
 
 	private AmlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AmlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAml
entryRuleAml 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getAmlRule()); }
	 ruleAml
{ after(grammarAccess.getAmlRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Aml
ruleAml
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAmlAccess().getElementsAssignment()); }
(rule__Aml__ElementsAssignment)*
{ after(grammarAccess.getAmlAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAbstractElements
entryRuleAbstractElements 
:
{ before(grammarAccess.getAbstractElementsRule()); }
	 ruleAbstractElements
{ after(grammarAccess.getAbstractElementsRule()); } 
	 EOF 
;

// Rule AbstractElements
ruleAbstractElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementsAccess().getAlternatives()); }
(rule__AbstractElements__Alternatives)
{ after(grammarAccess.getAbstractElementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuperEntity
entryRuleSuperEntity 
:
{ before(grammarAccess.getSuperEntityRule()); }
	 ruleSuperEntity
{ after(grammarAccess.getSuperEntityRule()); } 
	 EOF 
;

// Rule SuperEntity
ruleSuperEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuperEntityAccess().getNameAssignment()); }
(rule__SuperEntity__NameAssignment)
{ after(grammarAccess.getSuperEntityAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getGroup()); }
(rule__Feature__Group__0)
{ after(grammarAccess.getFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLengthFeature
entryRuleLengthFeature 
:
{ before(grammarAccess.getLengthFeatureRule()); }
	 ruleLengthFeature
{ after(grammarAccess.getLengthFeatureRule()); } 
	 EOF 
;

// Rule LengthFeature
ruleLengthFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLengthFeatureAccess().getGroup()); }
(rule__LengthFeature__Group__0)
{ after(grammarAccess.getLengthFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOUBLE
entryRuleDOUBLE 
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOUBLEAccess().getGroup()); }
(rule__DOUBLE__Group__0)
{ after(grammarAccess.getDOUBLEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNetWorkFeature
entryRuleNetWorkFeature 
:
{ before(grammarAccess.getNetWorkFeatureRule()); }
	 ruleNetWorkFeature
{ after(grammarAccess.getNetWorkFeatureRule()); } 
	 EOF 
;

// Rule NetWorkFeature
ruleNetWorkFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNetWorkFeatureAccess().getGroup()); }
(rule__NetWorkFeature__Group__0)
{ after(grammarAccess.getNetWorkFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColorFeature
entryRuleColorFeature 
:
{ before(grammarAccess.getColorFeatureRule()); }
	 ruleColorFeature
{ after(grammarAccess.getColorFeatureRule()); } 
	 EOF 
;

// Rule ColorFeature
ruleColorFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColorFeatureAccess().getGroup()); }
(rule__ColorFeature__Group__0)
{ after(grammarAccess.getColorFeatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule SuperNames
ruleSuperNames
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperNamesAccess().getAlternatives()); }
(rule__SuperNames__Alternatives)
{ after(grammarAccess.getSuperNamesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Color
ruleColor
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getAlternatives()); }
(rule__Color__Alternatives)
{ after(grammarAccess.getColorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AbstractElements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementsAccess().getEntityParserRuleCall_0()); }
	ruleEntity
{ after(grammarAccess.getAbstractElementsAccess().getEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementsAccess().getSuperEntityParserRuleCall_1()); }
	ruleSuperEntity
{ after(grammarAccess.getAbstractElementsAccess().getSuperEntityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperNames__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperNamesAccess().getCableEnumLiteralDeclaration_0()); }
(	'Cable' 
)
{ after(grammarAccess.getSuperNamesAccess().getCableEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSuperNamesAccess().getDriverEnumLiteralDeclaration_1()); }
(	'Driver' 
)
{ after(grammarAccess.getSuperNamesAccess().getDriverEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSuperNamesAccess().getMaxMinEnumLiteralDeclaration_2()); }
(	'MaxMin' 
)
{ after(grammarAccess.getSuperNamesAccess().getMaxMinEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_0()); }
(	'Red' 
)
{ after(grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_1()); }
(	'Black' 
)
{ after(grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_2()); }
(	'White' 
)
{ after(grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGreyEnumLiteralDeclaration_3()); }
(	'Grey' 
)
{ after(grammarAccess.getColorAccess().getGreyEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_4()); }
(	'Green' 
)
{ after(grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getPuidKeyword_0()); }

	'puid' 

{ after(grammarAccess.getEntityAccess().getPuidKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_2()); }
(rule__Entity__Group_2__0)?
{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getColorFeatureAssignment_4()); }
(rule__Entity__ColorFeatureAssignment_4)
{ after(grammarAccess.getEntityAccess().getColorFeatureAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNetworkFeatureAssignment_5()); }
(rule__Entity__NetworkFeatureAssignment_5)
{ after(grammarAccess.getEntityAccess().getNetworkFeatureAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLengthFeatureAssignment_6()); }
(rule__Entity__LengthFeatureAssignment_6)
{ after(grammarAccess.getEntityAccess().getLengthFeatureAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__7__Impl
	rule__Entity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_7()); }
(rule__Entity__FeaturesAssignment_7)*
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Entity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
(rule__Entity__SuperTypeAssignment_2_1)
{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Feature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameAssignment_0()); }
(rule__Feature__NameAssignment_0)
{ after(grammarAccess.getFeatureAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getFeatureAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getValueAssignment_2()); }
(rule__Feature__ValueAssignment_2)
{ after(grammarAccess.getFeatureAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getFeatureAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LengthFeature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthFeature__Group__0__Impl
	rule__LengthFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFeature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFeatureAccess().getNameAssignment_0()); }
(rule__LengthFeature__NameAssignment_0)
{ after(grammarAccess.getLengthFeatureAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthFeature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthFeature__Group__1__Impl
	rule__LengthFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFeature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFeatureAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLengthFeatureAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthFeature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthFeature__Group__2__Impl
	rule__LengthFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFeature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFeatureAccess().getValueAssignment_2()); }
(rule__LengthFeature__ValueAssignment_2)
{ after(grammarAccess.getLengthFeatureAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthFeature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthFeature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFeature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFeatureAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLengthFeatureAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DOUBLE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__0__Impl
	rule__DOUBLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__1__Impl
	rule__DOUBLE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getDOUBLEAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOUBLE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOUBLE__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getDOUBLEAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NetWorkFeature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NetWorkFeature__Group__0__Impl
	rule__NetWorkFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NetWorkFeature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNetWorkFeatureAccess().getNameAssignment_0()); }
(rule__NetWorkFeature__NameAssignment_0)
{ after(grammarAccess.getNetWorkFeatureAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NetWorkFeature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NetWorkFeature__Group__1__Impl
	rule__NetWorkFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NetWorkFeature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNetWorkFeatureAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getNetWorkFeatureAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NetWorkFeature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NetWorkFeature__Group__2__Impl
	rule__NetWorkFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NetWorkFeature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNetWorkFeatureAccess().getValueAssignment_2()); }
(rule__NetWorkFeature__ValueAssignment_2)
{ after(grammarAccess.getNetWorkFeatureAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NetWorkFeature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NetWorkFeature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NetWorkFeature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNetWorkFeatureAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getNetWorkFeatureAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ColorFeature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorFeature__Group__0__Impl
	rule__ColorFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorFeature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorFeatureAccess().getNameAssignment_0()); }
(rule__ColorFeature__NameAssignment_0)
{ after(grammarAccess.getColorFeatureAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColorFeature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorFeature__Group__1__Impl
	rule__ColorFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorFeature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorFeatureAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getColorFeatureAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColorFeature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorFeature__Group__2__Impl
	rule__ColorFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorFeature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorFeatureAccess().getValueAssignment_2()); }
(rule__ColorFeature__ValueAssignment_2)
{ after(grammarAccess.getColorFeatureAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColorFeature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorFeature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorFeature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorFeatureAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getColorFeatureAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Aml__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmlAccess().getElementsAbstractElementsParserRuleCall_0()); }
	ruleAbstractElements{ after(grammarAccess.getAmlAccess().getElementsAbstractElementsParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperEntity__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperEntityAccess().getNameSuperNamesEnumRuleCall_0()); }
	ruleSuperNames{ after(grammarAccess.getSuperEntityAccess().getNameSuperNamesEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeSuperEntityParserRuleCall_2_1_0()); }
	ruleSuperEntity{ after(grammarAccess.getEntityAccess().getSuperTypeSuperEntityParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ColorFeatureAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getColorFeatureColorFeatureParserRuleCall_4_0()); }
	ruleColorFeature{ after(grammarAccess.getEntityAccess().getColorFeatureColorFeatureParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NetworkFeatureAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNetworkFeatureNetWorkFeatureParserRuleCall_5_0()); }
	ruleNetWorkFeature{ after(grammarAccess.getEntityAccess().getNetworkFeatureNetWorkFeatureParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__LengthFeatureAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLengthFeatureLengthFeatureParserRuleCall_6_0()); }
	ruleLengthFeature{ after(grammarAccess.getEntityAccess().getLengthFeatureLengthFeatureParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_7_0()); }
	ruleFeature{ after(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getValueIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFeatureAccess().getValueIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFeature__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFeatureAccess().getNameLengthKeyword_0_0()); }
(
{ before(grammarAccess.getLengthFeatureAccess().getNameLengthKeyword_0_0()); }

	'length' 

{ after(grammarAccess.getLengthFeatureAccess().getNameLengthKeyword_0_0()); }
)

{ after(grammarAccess.getLengthFeatureAccess().getNameLengthKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LengthFeature__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthFeatureAccess().getValueDOUBLEParserRuleCall_2_0()); }
	ruleDOUBLE{ after(grammarAccess.getLengthFeatureAccess().getValueDOUBLEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NetWorkFeature__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNetWorkFeatureAccess().getNameNetworkKeyword_0_0()); }
(
{ before(grammarAccess.getNetWorkFeatureAccess().getNameNetworkKeyword_0_0()); }

	'network' 

{ after(grammarAccess.getNetWorkFeatureAccess().getNameNetworkKeyword_0_0()); }
)

{ after(grammarAccess.getNetWorkFeatureAccess().getNameNetworkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NetWorkFeature__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNetWorkFeatureAccess().getValueIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getNetWorkFeatureAccess().getValueIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorFeature__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorFeatureAccess().getNameColorKeyword_0_0()); }
(
{ before(grammarAccess.getColorFeatureAccess().getNameColorKeyword_0_0()); }

	'color' 

{ after(grammarAccess.getColorFeatureAccess().getNameColorKeyword_0_0()); }
)

{ after(grammarAccess.getColorFeatureAccess().getNameColorKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorFeature__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorFeatureAccess().getValueColorEnumRuleCall_2_0()); }
	ruleColor{ after(grammarAccess.getColorFeatureAccess().getValueColorEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


